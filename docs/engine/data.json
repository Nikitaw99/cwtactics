{
    "project": {
        "name": "The CW:T Engine API",
        "description": "",
        "version": "0.3.1.1",
        "url": "http://ctomni231.github.io/cwtactics/"
    },
    "files": {
        "srcEngine/core/core.js": {
            "name": "srcEngine/core/core.js",
            "modules": {
                "model": 1,
                "controller": 1,
                "util": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "srcEngine/util/functional.js": {
            "name": "srcEngine/util/functional.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "srcEngine/util/list.js": {
            "name": "srcEngine/util/list.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "srcEngine/util/ringBuffer.js": {
            "name": "srcEngine/util/ringBuffer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "srcEngine/util/sSM.js": {
            "name": "srcEngine/util/sSM.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "model": {
            "name": "model",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "srcEngine/core/core.js",
            "line": 97,
            "description": "The model layer holds all necessary data for a game round. This layer can be\nextended to store additional data for game rounds.\n\nIf you extend this layer you should follow two rules. At first remember that\nevery property of this layer will be saved in a save game. The current\npersistence layer implementation uses a json algorithm to serialize all model\ndata. This means you cannot store cyclic data structures in the model layer.\nFurthermore you should not place functions in this layer because this would\nnot follow the specification of this layer."
        },
        "controller": {
            "name": "controller",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "srcEngine/core/core.js",
            "line": 112,
            "description": "This is the main access layer for the custom wars tactics game client. All\ndata changing actions will be invoked from this layer.\n\nThe layer itself is build as state machine which represents a player action.\nEvery action starts by a selection of a tile. Which the selected object will\nbe choosen by the state of the tile. An empty tile leads to a map action. An\nempty (owned) property leads to a property actions like buying an unit. The\nlast option will be choosen if the tile is occupied by an own unit."
        },
        "util": {
            "name": "util",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "srcEngine/core/core.js",
            "line": 126,
            "description": "Some useful utility functions are stored in this layer. This layer contains\nthe logging functions of custom wars tactics. These functions are\noverwritable to have a custom log behaviour for the game client. As example\nif you use a graphical logging solution like BlackbirdJs."
        }
    },
    "classes": {},
    "classitems": [
        {
            "file": "srcEngine/core/core.js",
            "line": 1,
            "description": "Represents an inactive identical number.",
            "itemtype": "property",
            "name": "CWT_INACTIVE_ID",
            "final": 1,
            "type": "Number",
            "class": ""
        },
        {
            "file": "srcEngine/core/core.js",
            "line": 10,
            "itemtype": "property",
            "name": "DEBUG",
            "final": 1,
            "type": "Boolean",
            "class": ""
        },
        {
            "file": "srcEngine/core/core.js",
            "line": 17,
            "itemtype": "property",
            "name": "CWT_ACTIONS_BUFFER_SIZE",
            "final": 1,
            "type": "Number",
            "class": ""
        },
        {
            "file": "srcEngine/core/core.js",
            "line": 24,
            "description": "The greatest possible map width.",
            "itemtype": "property",
            "name": "CWT_MAX_MAP_WIDTH",
            "final": 1,
            "type": "Number",
            "class": ""
        },
        {
            "file": "srcEngine/core/core.js",
            "line": 33,
            "description": "The greatest possible map height.",
            "itemtype": "property",
            "name": "CWT_MAX_MAP_HEIGHT",
            "final": 1,
            "type": "Number",
            "class": ""
        },
        {
            "file": "srcEngine/core/core.js",
            "line": 42,
            "description": "Maximum amount of players in the game.",
            "itemtype": "property",
            "name": "CWT_MAX_PLAYER",
            "final": 1,
            "type": "Number",
            "class": ""
        },
        {
            "file": "srcEngine/core/core.js",
            "line": 51,
            "description": "The maximum amount of units a player can hold.",
            "itemtype": "property",
            "name": "CWT_MAX_UNITS_PER_PLAYER",
            "final": 1,
            "type": "Number",
            "class": ""
        },
        {
            "file": "srcEngine/core/core.js",
            "line": 60,
            "description": "The maximum amount of properties on a map.",
            "itemtype": "property",
            "name": "CWT_MAX_PROPERTIES",
            "final": 1,
            "type": "Number",
            "class": ""
        },
        {
            "file": "srcEngine/core/core.js",
            "line": 69,
            "description": "The maximum range to select a target from a selection range.",
            "itemtype": "property",
            "name": "CWT_MAX_SELECTION_RANGE",
            "final": 1,
            "type": "Number",
            "class": ""
        },
        {
            "file": "srcEngine/core/core.js",
            "line": 78,
            "description": "This constant can be overwritten for a custom size, but this must be done\nbefore the engine will be initialized.",
            "itemtype": "property",
            "name": "CWT_MAX_BUFFER_SIZE",
            "final": 1,
            "type": "Number",
            "class": ""
        },
        {
            "file": "srcEngine/core/core.js",
            "line": 88,
            "description": "The engine version tag.",
            "itemtype": "property",
            "name": "CWT_VERSION",
            "final": 1,
            "type": "String",
            "class": ""
        },
        {
            "file": "srcEngine/util/functional.js",
            "line": 1,
            "params": [
                {
                    "name": "cb",
                    "description": "call back function that will be invoked in the created scope",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "util"
        },
        {
            "file": "srcEngine/util/functional.js",
            "line": 9,
            "description": "Raises an error in the active Javascript environment.",
            "params": [
                {
                    "name": "reason",
                    "description": "A number of arguments that will be used as error message.\n                          If an argument isn't a String then it will be converted to\n                          String by the toString() function.",
                    "type": "...Object"
                }
            ],
            "class": "",
            "module": "util"
        },
        {
            "file": "srcEngine/util/functional.js",
            "line": 28,
            "description": "Logging function.",
            "params": [
                {
                    "name": "reason",
                    "description": "A number of arguments that will be used as message.\n                          If an argument isn't a String then it will be converted to\n                          String by the toString() function.",
                    "type": "...Object"
                }
            ],
            "itemtype": "config",
            "name": "",
            "class": "",
            "module": "util"
        },
        {
            "file": "srcEngine/util/list.js",
            "line": 1,
            "class": "",
            "module": "util"
        },
        {
            "file": "srcEngine/util/list.js",
            "line": 14,
            "class": "",
            "module": "util"
        },
        {
            "file": "srcEngine/util/list.js",
            "line": 30,
            "class": "",
            "module": "util"
        },
        {
            "file": "srcEngine/util/list.js",
            "line": 39,
            "class": "",
            "module": "util"
        },
        {
            "file": "srcEngine/util/list.js",
            "line": 53,
            "description": "Creates a list and fills it with default values.",
            "params": [
                {
                    "name": "len",
                    "description": "the length of the created list",
                    "type": "Number"
                },
                {
                    "name": "defaultValue",
                    "description": "the default value that will be inserted into the list slots"
                }
            ],
            "class": "",
            "module": "util"
        },
        {
            "file": "srcEngine/util/list.js",
            "line": 73,
            "description": "Creates a matrix (table) and fills it with default values.",
            "params": [
                {
                    "name": "w",
                    "description": "width of the matrix",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "height of the matrix",
                    "type": "Number"
                },
                {
                    "name": "defaultValue",
                    "description": "the default value that will be inserted into the cells"
                }
            ],
            "class": "",
            "module": "util"
        },
        {
            "file": "srcEngine/util/ringBuffer.js",
            "line": 1,
            "description": "Creates a ring buffer with a fixed size.",
            "class": "",
            "module": "util"
        },
        {
            "file": "srcEngine/util/ringBuffer.js",
            "line": 8,
            "description": "Pushes an element into the buffer",
            "params": [
                {
                    "name": "msg",
                    "description": "object that will be pushed into the buffer"
                }
            ],
            "class": "",
            "module": "util"
        },
        {
            "file": "srcEngine/util/ringBuffer.js",
            "line": 26,
            "description": "Returns true if the ring buffer is empty else false.",
            "class": "",
            "module": "util"
        },
        {
            "file": "srcEngine/util/ringBuffer.js",
            "line": 33,
            "description": "Returns the next available entry from the buffer (FIFO).",
            "class": "",
            "module": "util"
        },
        {
            "file": "srcEngine/util/ringBuffer.js",
            "line": 52,
            "description": "Clears the buffer.",
            "class": "",
            "module": "util"
        },
        {
            "file": "srcEngine/util/sSM.js",
            "line": 1,
            "description": "This is a small but state machine for JavaScript. It's originally designed\n  for Custom Wars Tactics (Link:) but can be used in other turn based games as well. \n  \n  Target of this library is to provide a complex configurate able state machine in a very\n  small library (03.2013 => 1KB minified and 0.5KB gzipped). \n  \n  This is why the complexity of this state machine is low overall. This engine\n  may suits for you if you only need to have a flow between states with basic on enter events \n  and a small history.  \n  \n  ToDo:\n    - convert DEBUG statements to a more generic solution\n    - better constant for the last state transition\n    - may add onLeave event\n    - debug reset functionality\n    - error event for illegal transitions\n  \n  License (MIT):\n    \n    Copyright (c) 2013 BlackCat [blackcat.myako@googlemail.com]\n  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and \n    associated documentation files (the \"Software\"), to deal in the Software without restriction, including \n    without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell \n    copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the \n    following conditions:\n  The above copyright notice and this permission notice shall be included in all copies or substantial \n    portions of the Software.\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT \n    LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. \n    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, \n    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE \n    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
            "class": "",
            "module": "util"
        },
        {
            "file": "srcEngine/util/sSM.js",
            "line": 43,
            "description": "The central finite state machine of the game engine.",
            "class": "",
            "module": "util"
        },
        {
            "file": "srcEngine/util/sSM.js",
            "line": 50,
            "description": "Represents a breaking transition event. To break a transition it should\nbe used in an event function of a state implementation.",
            "constant": "",
            "example": [
                " \n   action: function(){\n       return this.BREAK_TRANSITION;\n   }"
            ],
            "class": "",
            "module": "util"
        },
        {
            "file": "srcEngine/util/sSM.js",
            "line": 62,
            "description": "Current active state.",
            "class": "",
            "module": "util"
        },
        {
            "file": "srcEngine/util/sSM.js",
            "line": 67,
            "description": "State history that contains a queue of the state flow.",
            "type": "Array",
            "class": "",
            "module": "util"
        },
        {
            "file": "srcEngine/util/sSM.js",
            "line": 76,
            "description": "Represents a return to last state event. To return to the last state it \nshould be used in an event function of a state implementation.",
            "constant": "",
            "example": [
                " \n   cancel: function(){\n       return this.lastState;\n   }"
            ],
            "class": "",
            "module": "util"
        },
        {
            "file": "srcEngine/util/sSM.js",
            "line": 88,
            "description": "State machine construction diagram object. Every state and transition will \nbe defined in this descriptor object.",
            "class": "",
            "module": "util"
        },
        {
            "file": "srcEngine/util/sSM.js",
            "line": 96,
            "description": "Invokes an event in the current active state.",
            "params": [
                {
                    "name": "ev",
                    "description": "event name",
                    "type": "String"
                },
                {
                    "name": "arguments",
                    "description": "for the event",
                    "type": "...Object"
                }
            ],
            "class": "",
            "module": "util"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: constant",
            "line": " srcEngine/util/sSM.js:50"
        },
        {
            "message": "unknown tag: constant",
            "line": " srcEngine/util/sSM.js:76"
        },
        {
            "message": "Missing item type",
            "line": " srcEngine/util/functional.js:1"
        },
        {
            "message": "Missing item type\nRaises an error in the active Javascript environment.",
            "line": " srcEngine/util/functional.js:9"
        },
        {
            "message": "Missing item type",
            "line": " srcEngine/util/list.js:1"
        },
        {
            "message": "Missing item type",
            "line": " srcEngine/util/list.js:14"
        },
        {
            "message": "Missing item type",
            "line": " srcEngine/util/list.js:30"
        },
        {
            "message": "Missing item type",
            "line": " srcEngine/util/list.js:39"
        },
        {
            "message": "Missing item type\nCreates a list and fills it with default values.",
            "line": " srcEngine/util/list.js:53"
        },
        {
            "message": "Missing item type\nCreates a matrix (table) and fills it with default values.",
            "line": " srcEngine/util/list.js:73"
        },
        {
            "message": "Missing item type\nCreates a ring buffer with a fixed size.",
            "line": " srcEngine/util/ringBuffer.js:1"
        },
        {
            "message": "Missing item type\nPushes an element into the buffer",
            "line": " srcEngine/util/ringBuffer.js:8"
        },
        {
            "message": "Missing item type\nReturns true if the ring buffer is empty else false.",
            "line": " srcEngine/util/ringBuffer.js:26"
        },
        {
            "message": "Missing item type\nReturns the next available entry from the buffer (FIFO).",
            "line": " srcEngine/util/ringBuffer.js:33"
        },
        {
            "message": "Missing item type\nClears the buffer.",
            "line": " srcEngine/util/ringBuffer.js:52"
        },
        {
            "message": "Missing item type\nThis is a small but state machine for JavaScript. It's originally designed\n  for Custom Wars Tactics (Link:) but can be used in other turn based games as well. \n  \n  Target of this library is to provide a complex configurate able state machine in a very\n  small library (03.2013 => 1KB minified and 0.5KB gzipped). \n  \n  This is why the complexity of this state machine is low overall. This engine\n  may suits for you if you only need to have a flow between states with basic on enter events \n  and a small history.  \n  \n  ToDo:\n    - convert DEBUG statements to a more generic solution\n    - better constant for the last state transition\n    - may add onLeave event\n    - debug reset functionality\n    - error event for illegal transitions\n  \n  License (MIT):\n    \n    Copyright (c) 2013 BlackCat [blackcat.myako@googlemail.com]\n  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and \n    associated documentation files (the \"Software\"), to deal in the Software without restriction, including \n    without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell \n    copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the \n    following conditions:\n  The above copyright notice and this permission notice shall be included in all copies or substantial \n    portions of the Software.\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT \n    LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. \n    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, \n    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE \n    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
            "line": " srcEngine/util/sSM.js:1"
        },
        {
            "message": "Missing item type\nThe central finite state machine of the game engine.",
            "line": " srcEngine/util/sSM.js:43"
        },
        {
            "message": "Missing item type\nRepresents a breaking transition event. To break a transition it should\nbe used in an event function of a state implementation.",
            "line": " srcEngine/util/sSM.js:50"
        },
        {
            "message": "Missing item type\nCurrent active state.",
            "line": " srcEngine/util/sSM.js:62"
        },
        {
            "message": "Missing item type\nState history that contains a queue of the state flow.",
            "line": " srcEngine/util/sSM.js:67"
        },
        {
            "message": "Missing item type\nRepresents a return to last state event. To return to the last state it \nshould be used in an event function of a state implementation.",
            "line": " srcEngine/util/sSM.js:76"
        },
        {
            "message": "Missing item type\nState machine construction diagram object. Every state and transition will \nbe defined in this descriptor object.",
            "line": " srcEngine/util/sSM.js:88"
        },
        {
            "message": "Missing item type\nInvokes an event in the current active state.",
            "line": " srcEngine/util/sSM.js:96"
        }
    ]
}