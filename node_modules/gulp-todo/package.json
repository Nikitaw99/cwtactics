{
  "name": "gulp-todo",
  "version": "0.3.7",
  "description": "Generate a TODO.md file from comments of files in stream",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/pgilad/gulp-todo"
  },
  "author": {
    "name": "Gilad Peleg",
    "email": "giladp007@gmail.com"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha -R spec tests/*.js",
    "watchTest": "mocha --watch -R spec tests/*.js"
  },
  "files": [
    "index.js",
    "lib"
  ],
  "keywords": [
    "gulpplugin",
    "gulp",
    "js",
    "javascript",
    "comments",
    "todo",
    "list",
    "esprima",
    "parse",
    "esprima",
    "ast",
    "source",
    "code"
  ],
  "dependencies": {
    "esprima": "^1.2.2",
    "gulp-util": "^2.2.20",
    "lodash.defaults": "^2.4.1",
    "through2": "^0.5.1"
  },
  "devDependencies": {
    "gulp": "^3.8.6",
    "mocha": "^1.19.0"
  },
  "readme": "# [gulp](https://github.com/wearefractal/gulp)-todo\n> Generate a TODO.md file from comments of files in stream\n\n[![NPM Version](http://img.shields.io/npm/v/gulp-todo.svg?style=flat)](https://npmjs.org/package/gulp-todo)\n[![NPM Downloads](http://img.shields.io/npm/dm/gulp-todo.svg?style=flat)](https://npmjs.org/package/gulp-todo)\n[![Build Status](http://img.shields.io/travis/pgilad/gulp-todo.svg?style=flat)](https://travis-ci.org/pgilad/gulp-todo)\n\nParse files from a stream, extract todos/fixmes from comments and output a markdown file.\n\n## Install\n\nInstall with [npm](https://npmjs.org/package/gulp-todo)\n\n```bash\n$ npm install --save-dev gulp-todo\n```\n\n## Example\n\n```js\nvar gulp = require('gulp');\nvar todo = require('gulp-todo');\n\ngulp.task('todo', function() {\n    gulp.src('js/**/*.js')\n        .pipe(todo())\n        .pipe(gulp.dest('./'));\n});\n```\n\n## Supported Filetypes\n\n- Javascript (`.js`) - using Esprima\n\nIf you pass a file without a path (*i.e just data*) it will be parsed as a javascript file.\n\n#### PRs for additional filetypes is welcomed!!\n\n## Options\n\nAll options are **optional**, and can be passed along in an **object** with the following properties:\n\n### fileName\n\nSpecify the output filename.\n\n**Type**: `String`\n\n**Default**: `todo.md`\n\n### newLine\n\nHow to separate lines in the output file. Defaults to your OS's default line separator.\n\n**Type**: `String`\n\n**Default**: `\\n`\n\n### verbose\n\nOutput comments to console as well.\n\n**Type**: `Boolean`\n\n**Default**: `false`\n\n### transformHeader\n\nControl the output of a header for each comment kind (*i.e todo, fixme*).\n\n**Type**: `Function`\n\n**Default**:\n```js\nfunction (kind) {\n    return ['### ' + kind + 's',\n        '| Filename | line # | todo',\n        '|:--------:|:------:|:------:'];\n}\n```\n\n**Params**: `transformHeader(kind)`\n\n**kind**: will be be passed as the comment kind (todo/fixme).\n\n**Returns**: `String[]|String`\n\nYou are expected to return either an `Array of strings` or just a `string`. If you return an array - each item will be separated by a newline in the output.\n\n### transformComment\n\nControl the output for each comment.\n\n**Type**: `Function`\n\n**Default**:\n```js\nfunction (file, line, text) {\n    return ['| ' + file + ' | ' + line + ' | ' + text];\n}\n```\n\n**Params**: `transformComment(file, line, text, kind)`\n\n**file**: filename the comment was in.\n\n**line**: line of comment.\n\n**text**: comment text\n\n**kind**: will be be passed as the comment kind (todo/fixme).\n\n**Returns**: `String[]|String`\n\nYou are expected to return either an `Array of strings` or just a `string`. If you return an array - each item will be separated by a newline in the output.\n\n### Example options using defaults:\n\n```js\n//...\n.pipe(todo{\n\tfileName: 'todo.md',\n    verbose: false,\n    newLine: '\\n',\n    transformComment: function (file, line, text) {\n            return ['| ' + file + ' | ' + line + ' | ' + text];\n    },\n    transformHeader: function (kind) {\n    return ['### ' + kind + 's',\n        '| Filename | line # | todo',\n        '|:--------:|:------:|:------:'];\n    }\n})\n//...\n```\n\n## License\n\nMIT Â©2014 **Gilad Peleg**\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/pgilad/gulp-todo/issues"
  },
  "homepage": "https://github.com/pgilad/gulp-todo",
  "_id": "gulp-todo@0.3.7",
  "_from": "gulp-todo@"
}
