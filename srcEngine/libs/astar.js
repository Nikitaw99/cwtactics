// javascript-astar
// http://github.com/bgrins/javascript-astar
// Freely distributable under the MIT License.
// Implements the astar search algorithm in javascript using a binary heap.
// Includes Binary Heap (with modifications) from Marijn Haverbeke. 
// http://eloquentjavascript.net/appendix2.html

var GraphNodeType={OPEN:1,WALL:-1};function Graph(a){for(var b=[],d=0;d<a.length;d++){b[d]=[];for(var e=0,c=a[d];e<c.length;e++)b[d][e]=new GraphNode(d,e,c[e])}this.input=a;this.nodes=b}Graph.prototype.toString=function(){for(var a="\n",b=this.nodes,d,e,c,f,h=0,k=b.length;h<k;h++){d="";e=b[h];c=0;for(f=e.length;c<f;c++)d+=e[c].type+" ";a=a+d+"\n"}return a};function GraphNode(a,b,d){this.data={};this.x=a;this.y=b;this.pos={x:a,y:b};this.type=d}
GraphNode.prototype.toString=function(){return"["+this.x+" "+this.y+"]"};GraphNode.prototype.isWall=function(){return this.type==GraphNodeType.WALL};function BinaryHeap(a){this.content=[];this.scoreFunction=a}
BinaryHeap.prototype={push:function(a){this.content.push(a);this.sinkDown(this.content.length-1)},pop:function(){var a=this.content[0],b=this.content.pop();0<this.content.length&&(this.content[0]=b,this.bubbleUp(0));return a},remove:function(a){var b=this.content.indexOf(a),d=this.content.pop();b!==this.content.length-1&&(this.content[b]=d,this.scoreFunction(d)<this.scoreFunction(a)?this.sinkDown(b):this.bubbleUp(b))},size:function(){return this.content.length},rescoreElement:function(a){this.sinkDown(this.content.indexOf(a))},
sinkDown:function(a){for(var b=this.content[a];0<a;){var d=(a+1>>1)-1,e=this.content[d];if(this.scoreFunction(b)<this.scoreFunction(e))this.content[d]=b,this.content[a]=e,a=d;else break}},bubbleUp:function(a){for(var b=this.content.length,d=this.content[a],e=this.scoreFunction(d);;){var c=a+1<<1,f=c-1,h=null;if(f<b){var k=this.scoreFunction(this.content[f]);k<e&&(h=f)}c<b&&this.scoreFunction(this.content[c])<(null===h?e:k)&&(h=c);if(null!==h)this.content[a]=this.content[h],this.content[h]=d,a=h;else break}}};
var astar={init:function(a){for(var b=0,d=a.length;b<d;b++)for(var e=0,c=a[b].length;e<c;e++){var f=a[b][e];f.f=0;f.g=0;f.h=0;f.cost=f.type;f.visited=!1;f.closed=!1;f.parent=null}},heap:function(){return new BinaryHeap(function(a){return a.f})},search:function(a,b,d,e,c){astar.init(a);c=c||astar.manhattan;e=!!e;var f=astar.heap();for(f.push(b);0<f.size();){b=f.pop();if(b===d){a=b;for(d=[];a.parent;)d.push(a),a=a.parent;return d.reverse()}b.closed=!0;for(var h=astar.neighbors(a,b,e),k=0,n=h.length;k<
n;k++){var g=h[k];if(!g.closed&&!g.isWall()){var l=b.g+g.cost,m=g.visited;if(!m||l<g.g)g.visited=!0,g.parent=b,g.h=g.h||c(g.pos,d.pos),g.g=l,g.f=g.g+g.h,m?f.rescoreElement(g):f.push(g)}}}return[]},manhattan:function(a,b){var d=Math.abs(b.x-a.x),e=Math.abs(b.y-a.y);return d+e},neighbors:function(a,b,d){var e=[],c=b.x;b=b.y;a[c-1]&&a[c-1][b]&&e.push(a[c-1][b]);a[c+1]&&a[c+1][b]&&e.push(a[c+1][b]);a[c]&&a[c][b-1]&&e.push(a[c][b-1]);a[c]&&a[c][b+1]&&e.push(a[c][b+1]);d&&(a[c-1]&&a[c-1][b-1]&&e.push(a[c-
1][b-1]),a[c+1]&&a[c+1][b-1]&&e.push(a[c+1][b-1]),a[c-1]&&a[c-1][b+1]&&e.push(a[c-1][b+1]),a[c+1]&&a[c+1][b+1]&&e.push(a[c+1][b+1]));return e}};