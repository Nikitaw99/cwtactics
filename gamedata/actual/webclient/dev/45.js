controller.registerInvokableCommand("unitSuppliesNeighbours"),controller.registerInvokableCommand("tryUnitSuppliesNeighbours"),controller.registerInvokableCommand("refillResources"),controller.registerInvokableCommand("propertyRepairs"),controller.registerInvokableCommand("propertySupply"),controller.registerInvokableCommand("doPropertyGiveFunds"),controller.defineEvent("unitSuppliesNeighbours"),controller.defineEvent("refillResources"),controller.defineEvent("propertyRepairs"),controller.defineEvent("propertySupply"),controller.defineEvent("doPropertyGiveFunds"),controller.defineGameConfig("autoSupplyAtTurnStart",0,1,1),model.unitTypeParser.addHandler(function(e){var t,o,r,n,l,i;if(util.expectArray(e,"supply",!1)===util.expectMode.DEFINED)for(n=e.supply,l=0,i=n.length;i>l;l++)if(!util.expectString(n,l,!0))return!1;if(util.expectObject(e,"repairs",!1)===util.expectMode.DEFINED)for(t=e.repairs,r=Object.keys(t),l=0,i=r.length;i>l;l++)if(o=r[l],!util.expectNumber(t,o,!0,!0,1,9))return!1}),model.tileTypeParser.addHandler(function(e){if(util.expectObject(e,"repairs",!1)===util.expectMode.DEFINED)for(var t=e.repairs,o=Object.keys(t),r=0,n=o.length;n>r;r++){var l=o[r];if(!util.expectNumber(t,l,!0,!0,1,9))return!1}}),model.doPropertyGiveFunds=function(e){var t=model.properties[e],o=t.x,r=t.y;t.owner===constants.INACTIVE_ID&&model.criticalError(constants.error.ILLEGAL_PARAMETERS,constants.error.UNKNOWN_PLAYER_ID),controller.prepareTags(o,r);var n=controller.scriptedValue(t.owner,"funds",t.type.funds);"number"==typeof n&&(model.players[t.owner].gold+=n,controller.events.doPropertyGiveFunds(e,o,r))},model.propertySupply=function(e){var t=model.properties[e];if(t.owner===n&&t.type.supply){var o=t.x,r=t.y,n=t.owner,l=model.thereIsUnitCheck,i=model.MODE_OWN;if(1===controller.configValue("supplyAlliedUnits")&&(i=model.MODE_TEAM),l(o,r,n,i)){var a=model.unitPosMap[o][r].type;controller.objectInList(t.type.supply,a.ID,a.movetype)&&(model.refillResources(model.unitPosMap[o][r]),controller.events.propertySupply(e,o,r))}}},model.propertyRepairs=function(e){var t=model.properties[e];if(t.owner===constants.INACTIVE_ID&&model.criticalError(constants.error.ILLEGAL_PARAMETERS,constants.error.UNKNOWN_PLAYER_ID),t.type.repairs){var o=t.x,r=t.y,n=t.owner,l=model.thereIsUnitCheck,i=model.MODE_OWN;if(1===controller.configValue("repairAlliedUnits")&&(i=model.MODE_TEAM),l(o,r,n,i)){var a=model.unitPosMap[o][r].type,s=controller.objectInMap(t.type.repairs,a.ID,a.movetype);s>0&&(model.healUnit(model.extractUnitId(model.unitPosMap[o][r]),model.ptToHp(s),!0),controller.events.propertyRepairs(e,o,r))}}},model.isSupplyUnit=function(e){return model.units[e].type.supply},model.hasSupplyTargetsNearby=function(e){return model.isSupplyUnit(e)?(model.units[e],!1):!1},model.tryUnitSuppliesNeighbours=function(e){model.isSupplyUnit(e)&&model.unitSuppliesNeighbours(e)},model.unitSuppliesNeighbours=function(e){var t=model.units[e];t.type.supply||model.criticalError(constants.error.ILLEGAL_PARAMETERS,constants.error.SUPPLY_UNIT_EXPECTED);for(var o=t.x,r=t.y,n=t.owner,l=model.getFirstUnitSlotId(n),i=model.getLastUnitSlotId(n),a=!1;i>l;l++)1===model.unitDistance(e,l)&&(a||controller.events.unitSuppliesNeighbours(e,o,r,l),a=!0,model.refillResources(l))},model.refillResources=function(e){var t=model.units[e],o=t.type;t.ammo=o.ammo,t.fuel=o.fuel,controller.events.refillResources(e)};