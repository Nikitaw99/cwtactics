controller.inGameRound=!1,controller.evaledChars_=0,controller.updateState=function(t){if(controller.inGameRound||util.raiseError("no game round is active"),model.updateTimer(t),controller.inGameRound&&!controller.actionBuffer_.isEmpty()){var e=controller.actionBuffer_.pop(),n=controller.actionMap[e[e.length-1]];if(n||model.criticalError(constants.error.ILLEGAL_DATA,constants.error.ILLEGAL_ACTION_FUNCTION_ID),constants.DEBUG){var r=JSON.stringify(e);controller.evaledChars_+=r.length,util.log("evaluate action data",r,"\n * action key :",n,"\n * evaluated characters (acc.) :",controller.evaledChars_)}model[n].apply(model,e)}},controller.prepareGameRound=function(){controller.evaledChars_=0,controller.actionBuffer_.clear()},controller.startGameRound=function(){controller.inGameRound&&model.criticalError(constants.error.ILLEGAL_DATA,constants.error.GAME_ROUND_ACTIVE),controller.inGameRound=!0,model.turnOwner--,controller.localInvokement("nextTurn",[])},controller.endGameRound=function(){controller.inGameRound||model.criticalError(constants.error.ILLEGAL_DATA,constants.error.NO_GAME_ROUND_ACTIVE),controller.inGameRound=!1};