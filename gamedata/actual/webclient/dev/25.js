controller.registerInvokableCommand("doExplosionAt"),controller.registerInvokableCommand("fireSilo"),controller.registerInvokableCommand("siloRegeneratesIn"),controller.registerInvokableCommand("fireCannon"),controller.defineEvent("doExplosionAt"),controller.defineEvent("startFireSilo"),controller.defineEvent("fireCannon"),model.unitTypeParser.addHandler(function(t){if(util.expectObject(t,"suicide",!1)===util.expectMode.DEFINED){var e=t.suicide;if(!util.expectNumber(e,"damage",!0,!0,1,9))return!1;if(!util.expectNumber(e,"range",!0,!0,1,constants.MAX_SELECTION_RANGE))return!1;if(util.expectObject(e,"nodamage",!1)===util.expectMode.DEFINED)for(var n=e.nodamage,r=0,o=n.length;o>r;r++)if(!util.expectString(n,r,!0))return!1}}),util.scoped(function(){function t(t,e,n){var r=model.unitPosMap[t][e];r&&model.damageUnit(model.extractUnitId(r),n,9)}model.doExplosionAt=function(e,n,r,o,i){model.doInRange(e,n,r,t,o),controller.events.doExplosionAt(e,n,r,o,i)}}),model.fireSilo=function(t,e,n,r,o){var i=model.propertyPosMap[t][e],a=model.extractPropertyId(i),l=i.type,s=l.rocketsilo.range,c=model.ptToHp(l.rocketsilo.damage);model.changePropertyType(a,model.tileTypes[l.changeTo]),controller.events.startFireSilo(t,e,a,n,r,s,c,o),model.doExplosionAt(n,r,s,c,o),model.pushTimedEvent(model.daysToTurns(turns),controller.getInvokementArguments("changePropertyType",[a,l])),controller.events.siloRegeneratesIn(a,turns,l)},model.isSuicideUnit=function(t){return model.units[t].type.suicide},model.isRocketSilo=function(t,e){var n=model.properties[t].type;if(!n.rocketsilo)return!1;if(2===arguments.length){var r=model.units[e].type.ID;if(-1===n.rocketsilo.fireable.indexOf(r))return!1}return!0},model.isSiloFirableBy=model.isRocketSilo,model.isCannon=function(t){return model.units[t].type.cannon},model.tryToMarkCannonTargets=function(t,e,n,r,o,i,a,l,s,c,u){for(var d=model.players[t].team,E=l,h=!1;s>=a;a++)for(l=E;l>=c;l--)if(model.isValidPosition(a,l)&&!(Math.abs(a-n)+Math.abs(l-r)>u||Math.abs(a-o)+Math.abs(l-i)>u||0>=model.fogData[a][l])){var _=model.unitPosMap[a][l];_&&_.owner!==t&&model.players[_.owner].team!==d&&(e.setValueAt(a,l,1),h=!0)}return h},model.markCannonTargets=function(t,e){var n,r=model.units[t],o=r.type;if(!o.cannon)return!1;e.setCenter(r.x,r.y,0);var i=o.cannon.range;switch(o.cannon.direction){case"N":n=model.tryToMarkCannonTargets(r.owner,e,r.x,r.y,r.x,r.y-i-1,r.x-i+1,r.y-1,r.x+i-1,r.y-i,i);break;case"E":n=model.tryToMarkCannonTargets(r.owner,e,r.x,r.y,r.x+i+1,r.y,r.x+1,r.y+i-1,r.x+i,r.y-i+1,i);break;case"W":n=model.tryToMarkCannonTargets(r.owner,e,r.x,r.y,r.x-i-1,r.y,r.x-i,r.y+i-1,r.x-1,r.y-i+1,i);break;case"S":n=model.tryToMarkCannonTargets(r.owner,e,r.x,r.y,r.x,r.y+i+1,r.x-i+1,r.y+i,r.x+i-1,r.y+1,i)}return n},model.fireCannon=function(t,e,n){var r=model.units[t],o=model.unitPosMap[e][n],i=r.type,o=model.unitPosMap[e][n];model.damageUnit(model.extractUnitId(o),model.ptToHp(i.cannon.damage),9),controller.events.fireCannon(t,e,n)};