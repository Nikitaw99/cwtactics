util.scoped(function(){var e,t,o,n,r=null,i={},l="__volume_sfx__",a="__music_sfx__";controller.emptyMusicCache=function(){},controller.generateMusicCache=function(){for(var e=0,t=constants.MAX_PLAYER;t>e;e++)model.coData[e]},controller.saveSoundConfigs=function(){controller.storage.set(l,e.gain.value),controller.storage.set(a,t.gain.value)},controller.audioContext=function(){if(!r)if(controller.clientFeatures.audioSFX||controller.clientFeatures.audioMusic)try{if(util.log("init audio context"),window.AudioContext)util.log("using standardized one"),r=new window.AudioContext;else{if(!window.webkitAudioContext)throw Error("no webaudio contructor found");util.log("using webkit prefixed one"),r=new window.webkitAudioContext}e=r.createGainNode(),e.gain.value=1,e.connect(r.destination),t=r.createGainNode(),t.gain.value=.5,t.connect(r.destination),controller.storage.get(l,function(t){null!==t&&(e.gain.value=t.value)}),controller.storage.get(a,function(e){null!==e&&(t.gain.value=e.value)}),util.log("finished init audio context")}catch(o){constants.DEBUG&&util.log("could not grab audio context, your environment seems to be out of webAudio API support err:",o),r=null}else r=null;return r},controller.registerSoundFile=function(e,t){i[e]=t},controller.getSfxVolume=function(){return r?e.gain.value:0},controller.getMusicVolume=function(){return r?t.gain.value:0},controller.setSfxVolume=function(t){r&&(0>t?t=0:t>1&&(t=1),e.gain.value=t)},controller.setMusicVolume=function(e){r&&(0>e?e=0:e>1&&(e=1),t.gain.value=e)},controller.playSound=function(o,n,l){if(null!==r){var a=l?t:e,s=r.createBufferSource();return n&&(s.loop=!0),s.buffer=i[o],s.connect(a),s.noteOn(0),s}},controller.playEmptyAudio=function(){if(null!==r){var e=r.createBuffer(1,1,22050),t=r.createBufferSource();t.buffer=e,t.connect(r.destination),t.noteOn(0)}},controller.playMusic=function(e){null!==r&&n!==e&&(o&&(o.noteOff(0),o.disconnect(0)),i[e]&&(o=controller.playSound(e,!0,!0),n=e))}}),controller.playMusicForPlayer=function(e){if(controller.clientFeatures.audioMusic){var t=model.coData[e].coA;t&&controller.playMusic(t.music)}};