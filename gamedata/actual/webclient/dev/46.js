controller.registerInvokableCommand("loadUnitInto"),controller.registerInvokableCommand("unloadUnitFrom"),controller.defineEvent("loadUnitInto"),controller.defineEvent("unloadUnitFrom"),model.unitTypeParser.addHandler(function(e){var t,o,r;if(!util.expectBoolean(e,"suppliesloads",!1))return!1;if(util.expectArray(e,"canload",!1)===util.expectMode.DEFINED){if(!util.expectNumber(e,"maxloads",!0,!0,1,5))return!1;for(t=e.canload,o=0,r=t.length;r>o;o++)if(!util.expectString(t,o,!0))return!1}}),model.hasLoadedIds=function(e){for(var t=model.units[e].owner,o=model.getFirstUnitSlotId(t),r=model.getLastUnitSlotId(t);r>o;o++)if(o!==e){var n=model.units[o];if(null!==n&&n.loadedIn===e)return!0}return!1},model.isLoadedBy=function(e,t){return model.units[e].loadedIn===t},model.loadUnitInto=function(e,t){model.canLoad(e,t)||util.raiseError("transporter unit",t,"cannot load unit",e),model.units[e].loadedIn=t,model.units[t].loadedIn--,controller.events.loadUnitInto(e,t)},model.unloadUnitFrom=function(e,t,o,r,n,l){if(model.units[r].loadedIn!==e&&model.criticalError(constants.error.ILLEGAL_PARAMETERS,constants.error.LOAD_IS_NOT_IN_TRANSPORTER),-1!==n&&-1!==l){model.units[r].loadedIn=-1,model.units[e].loadedIn++;var i;t>n?i=model.moveCodes.LEFT:n>t?i=model.moveCodes.RIGHT:o>l?i=model.moveCodes.UP:l>o&&(i=model.moveCodes.DOWN),controller.events.unloadUnitFrom(e,t,o,r,n,l),model.moveUnit([i],r,t,o),model.markUnitNonActable(r)}},model.canUnloadUnitAt=function(e,t,o){var r,n=model.units[e],l=n.owner;if(!model.isTransport(e)||!model.hasLoadedIds(e))return!1;for(var i=model.getFirstUnitSlotId(l),a=model.getLastUnitSlotId(l);a>=i;i++)if(r=model.units[i],r.owner!==constants.INACTIVE_ID&&r.loadedIn===e){var s=model.moveTypes[r.type.movetype];if(model.canTypeMoveTo(s,t-1,o))return!0;if(model.canTypeMoveTo(s,t+1,o))return!0;if(model.canTypeMoveTo(s,t,o-1))return!0;if(model.canTypeMoveTo(s,t,o+1))return!0}return!1},model.addUnloadTargetsToMenu=function(e,t,o,r){model.isTransport(e)||model.criticalError(constants.error.ILLEGAL_PARAMETERS,constants.error.ILLEGAL_PARAMETERS);for(var n,l=model.units[e],i=l.owner,a=model.getFirstUnitSlotId(i),s=model.getLastUnitSlotId(i);s>=a;a++)if(n=model.units[a],n.owner!==constants.INACTIVE_ID&&n.loadedIn===e){var c=model.moveTypes[n.type.movetype];(model.canTypeMoveTo(c,t-1,o)||model.canTypeMoveTo(c,t+1,o)||model.canTypeMoveTo(c,t,o-1)||model.canTypeMoveTo(c,t,o+1))&&r.addEntry(a,!0)}},model.addUnloadTargetsToSelection=function(e,t,o,r,n){model.units[e];var l=model.moveTypes[model.units[r].type.movetype];model.canTypeMoveTo(l,t-1,o)&&n.setValueAt(t-1,o,1),model.canTypeMoveTo(l,t+1,o)&&n.setValueAt(t+1,o,1),model.canTypeMoveTo(l,t,o-1)&&n.setValueAt(t,o-1,1),model.canTypeMoveTo(l,t,o+1)&&n.setValueAt(t,o+1,1)},model.canLoad=function(e,t){e===t&&model.criticalError(constants.error.ILLEGAL_PARAMETERS,constants.error.TRANSPORTER_CANNOT_LOAD_ITSELF);var o=model.units[t];util.notIn("maxloads",o.type)&&model.criticalError(constants.error.ILLEGAL_PARAMETERS,constants.error.TRANSPORTER_EXPECTED);var r=model.units[e];return 0===o.loadedIn+o.type.maxloads+1?!1:-1!==o.type.canload.indexOf(r.type.movetype)},model.isTransport=function(e){return model.units[e].type.maxloads};