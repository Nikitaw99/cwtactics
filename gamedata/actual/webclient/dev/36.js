controller.registerInvokableCommand("noTeamLeft"),controller.registerInvokableCommand("playerGivesUp"),controller.registerInvokableCommand("playerLooses"),controller.defineEvent("playerGivesUp"),controller.defineEvent("playerLooses"),controller.defineEvent("noTeamLeft"),model.relationModes={SAME_OBJECT:-1,NONE:0,OWN:1,ALLIED:2,TEAM:3,ENEMY:4,NULL:5},model.players=util.list(constants.MAX_PLAYER,function(){return{gold:0,team:constants.INACTIVE_ID,name:null}}),controller.persistenceHandler(function(e){for(var t,o,r=e.players,n=0,l=constants.MAX_PLAYER;l>n;n++)o=model.players[n],o.name=null,o.gold=0,o.team=constants.INACTIVE_ID;if(r)for(var n=0,l=r.length;l>n;n++){t=r[n];var a=!1;a||util.expectNumber(t,0,!0,!0,0,constants.MAX_PLAYER-1)||(a=!0),a||util.expectString(t,1,!0)||(a=!0),a||util.expectNumber(t,2,!0,!0,0,999999)||(a=!0),a||util.expectNumber(t,3,!0,!0,0,constants.MAX_PLAYER-1)||(a=!0),a&&model.criticalError(constants.error.ILLEGAL_MAP_FORMAT,constants.error.SAVEDATA_PLAYER_MISSMATCH),o=model.players[t[0]],o.name=t[1],o.gold=t[2],o.team=t[3]}},function(){}),model.isValidPlayerId=function(e){return 0>e||e>=constants.MAX_PLAYER?!1:model.players[e].team!==constants.INACTIVE_ID},model.extractPlayerId=function(e){var t=model.players.indexOf(e);return-1===t&&model.criticalError(constants.error.ILLEGAL_PARAMETERS,constants.error.UNKNOWN_PLAYER_OBJECT),t},model.playerLooses=function(e){var t,o,r=controller.events.playerLooses;for(r&&r(e),t=model.getFirstUnitSlotId(e),o=model.getLastUnitSlotId(e);o>t;t++)model.units[t].owner!==constants.INACTIVE_ID&&model.destroyUnit(t);for(t=0,o=model.properties.length;o>t;t++){var n=model.properties[t];if(n.owner===e){n.owner=-1;var l=n.type.changeAfterCaptured;l&&model.changePropertyType(t,l)}}model.players[e].team=-1,model.atLeastTwoTeamsLeft()||controller.localInvokement("noTeamLeft")},model.atLeastTwoTeamsLeft=function(){for(var e,t=-1,o=0,r=model.players.length;r>o;o++)if(e=model.players[o],-1!==e.team)if(-1===t)t=e.team;else if(t!==e.team){t=-1;break}return-1===t},model.thereIsUnitCheck=function(e,t,o,r){if(!model.isValidPosition(e,t))return!1;var n=model.unitPosMap[e][t];return null!==n&&model.relationShipCheck(o,n.owner)===r},model.thereIsPropertyCheck=function(e,t,o,r){if(!model.isValidPosition(e,t))return!1;var n=model.propertyPosMap[e][t];return null!==n&&model.relationShipCheck(o,n.owner)===r},model.relationShipCheck=function(e,t){if(null===e||null===t)return model.relationModes.NULL;if(-1===e||-1===t)return model.relationModes.NONE;if(-1===model.players[e].team||-1===model.players[t].team)return model.relationModes.NONE;if(e===t)return model.relationModes.OWN;var o=model.players[e].team,r=model.players[t].team;return-1===o||-1===r?model.relationModes.NONE:o===r?model.relationModes.ALLIED:o!==r?model.relationModes.ENEMY:model.relationModes.NONE},model.relationShipCheckUnitNeighbours=function(e,t,o,r){var n=model.relationShipCheck,l=r===model.relationModes.OWN,a=0,i=model.units.length;for(l&&(a=model.getFirstUnitSlotId(e),i=model.getLastUnitSlotId(e));i>a;a++)if(1===model.unitDistance(sid,a)&&(l||n(e,model.units[a].owner)===r))return!0;return!1},model.playerGivesUp=function(){model.isClientPlayer(model.turnOwner)||model.criticalError(0,0),model.playerLooses(model.turnOwner),model.nextTurn(),controller.events.playerGivesUp(model.turnOwner)},model.noTeamLeft=function(){controller.endGameRound(),controller.events.noTeamLeft()};