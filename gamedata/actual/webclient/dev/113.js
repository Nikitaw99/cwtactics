util.scoped(function(){var e=util.matrix(4*constants.MAX_SELECTION_RANGE+1,4*constants.MAX_SELECTION_RANGE+1,0);controller.attackRangeVisible=!1,controller.showAttackRangeInfo=function(){if(!controller.attackRangeVisible){var t=controller.mapCursorX,o=controller.mapCursorY,n=model.unitPosMap[t][o];if(null!==n){var r=model.extractUnitId(n);DEBUG&&util.log("show attack range information");var a=controller.stateMachine.data.selection;if(a.setCenter(t,o,CWT_INACTIVE_ID),model.isIndirectUnit(r))model.attackRangeMod_(r,t,o,a);else{controller.stateMachine.data.movePath.fillMoveMap(t,o,n),a.data.cloneValues(e),a.setCenter(t,o,CWT_INACTIVE_ID);for(var i=e.length,l=0;i>l;l++)for(var s=0;i>s;s++)e[l][s]>=0&&model.attackRangeMod_(r,l,s,a,!0)}controller.attackRangeVisible=!0}}},controller.hideAttackRangeInfo=function(){controller.attackRangeVisible&&(DEBUG&&util.log("hide attack range information"),view.markSelectionMapForRedraw(controller.stateMachine.data),controller.attackRangeVisible=!1)}});