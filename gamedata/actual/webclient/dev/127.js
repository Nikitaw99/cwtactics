view.registerAnimationHook({key:"moveUnit",prepare:function(e,t,o,n){this.moveAnimationX=o,this.moveAnimationY=n,this.moveAnimationIndex=0,this.moveAnimationPath=e,this.moveAnimationUid=t,this.moveAnimationShift=0,this.moveAnimationDustX=-1,this.moveAnimationDustY=-1,this.moveAnimationDustTime=-1,this.moveAnimationDustStep=-1,this.moveAnimationDustPic=null,view.preventRenderUnit=model.units[t],model.units[t].type.movetype,constants.DEBUG&&util.log("drawing move from","(",this.moveAnimationX,",",this.moveAnimationY,")","with path","(",this.moveAnimationPath,")")},update:function(e){var t=TILE_LENGTH;if(this.moveAnimationShift+=e/1e3*8*t,view.markForRedrawWithNeighboursRing(this.moveAnimationX,this.moveAnimationY),-1!==this.moveAnimationDustStep&&(this.moveAnimationDustTime+=e,this.moveAnimationDustTime>30&&(this.moveAnimationDustStep++,this.moveAnimationDustTime=0,3===this.moveAnimationDustStep&&(this.moveAnimationDustStep=-1))),this.moveAnimationShift>t){switch(this.moveAnimationDustX=this.moveAnimationX,this.moveAnimationDustY=this.moveAnimationY,this.moveAnimationDustTime=0,this.moveAnimationDustStep=0,this.moveAnimationPath[this.moveAnimationIndex]){case model.moveCodes.UP:this.moveAnimationY--,this.moveAnimationDustPic=view.getInfoImageForType("DUST_U");break;case model.moveCodes.RIGHT:this.moveAnimationX++,this.moveAnimationDustPic=view.getInfoImageForType("DUST_R");break;case model.moveCodes.DOWN:this.moveAnimationY++,this.moveAnimationDustPic=view.getInfoImageForType("DUST_D");break;case model.moveCodes.LEFT:this.moveAnimationX--,this.moveAnimationDustPic=view.getInfoImageForType("DUST_L")}this.moveAnimationIndex++,this.moveAnimationShift-=t,this.moveAnimationIndex===this.moveAnimationPath.length&&(this.moveAnimationX=0,this.moveAnimationY=0,this.moveAnimationIndex=0,this.moveAnimationPath=null,this.moveAnimationUid=-1,this.moveAnimationShift=0,view.preventRenderUnit=null)}},render:function(){var e,t=this.moveAnimationUid,o=this.moveAnimationX,n=this.moveAnimationY,r=this.moveAnimationShift,i=this.moveAnimationPath[this.moveAnimationIndex],a=model.units[t],l=view.colorArray[a.owner],s=a.type;switch(i){case model.moveCodes.UP:e=view.IMAGE_CODE_UP;break;case model.moveCodes.RIGHT:e=view.IMAGE_CODE_RIGHT;break;case model.moveCodes.DOWN:e=view.IMAGE_CODE_DOWN;break;case model.moveCodes.LEFT:e=view.IMAGE_CODE_LEFT}var c=view.getUnitImageForType(s.ID,e,l),d=TILE_LENGTH,u=controller.baseSize,m=2*u*view.getSpriteStep("UNIT"),p=0,f=2*u,E=2*u,h=o*d-d/2,v=n*d-d/2,I=d+d,g=d+d;switch(i){case model.moveCodes.UP:v-=r;break;case model.moveCodes.LEFT:h-=r;break;case model.moveCodes.RIGHT:h+=r;break;case model.moveCodes.DOWN:v+=r}if(void 0!==c)view.canvasCtx.drawImage(c,m,p,f,E,h,v,I,I);else{switch(h=o*d,v=n*d,I=d,g=d,i){case model.moveCodes.UP:v-=r;break;case model.moveCodes.LEFT:h-=r;break;case model.moveCodes.RIGHT:h+=r;break;case model.moveCodes.DOWN:v+=r}view.canvasCtx.fillStyle="rgb(255,0,0)",view.canvasCtx.fillRect(h,v,I,g)}if(-1!==this.moveAnimationDustStep){var d=TILE_LENGTH;m=2*u*this.moveAnimationDustStep,p=0,f=2*u,E=2*u,h=this.moveAnimationDustX*d-d/2,v=this.moveAnimationDustY*d-d/2,I=d+d,g=d+d,view.canvasCtx.drawImage(this.moveAnimationDustPic,m,p,f,E,h,v,I,g)}},isDone:function(){var e=-1===this.moveAnimationUid;return e}});