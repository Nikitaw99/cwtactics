controller.loadImages=util.singleLazyCall(function(e,t){function o(e){constants.DEBUG&&util.log("saved image type",e.key)}function n(){var e=this.mode_,t=this.baton_,n=this.list_,r=this.pickey_,i=this.saveIt_;switch(i&&controller.storage.set(r,Base64Helper.canvasToBase64(this),o),delete this.pickey_,delete this.baton_,delete this.list_,delete this.mode_,delete this.saveIt_,e){case"UNIT":view.setUnitImageForType(this,r,view.IMAGE_CODE_IDLE,view.COLOR_RED);break;case"PROPERTY":view.setPropertyImageForType(this,r,view.COLOR_RED);break;case"TILE":view.setTileImageForType(this,r);break;case"MISC":view.setInfoImageForType(this,r);break;default:util.raiseError("unknown mode key",e)}n.curStep_===n.length&&(s++,n=c.length>s?c[s]:null),t.pass(n)}function r(e,t){e===!0&&t.pass(!0),t.take(),e.curStep_===e.length&&util.raiseError("illegal index");var o=e[e.curStep_];e.curStep_++,img=new Image,img.pickey_=o[0],img.baton_=t,img.mode_=e.mode_,img.list_=e,img.saveIt_=!1,img.onerror=function(){controller.loadFault({message:"could not load image "+img.pickey_,stack:null},t)},"ANIMATED"===o[2]?view.animatedTiles[img.pickey_]=!0:"OVERLAYER"===o[2]&&(view.overlayImages[img.pickey_]=!0),controller.storage.has(o[0],function(e){e?controller.storage.get(o[0],function(e){img.onload=n,img.src="data:image/png;base64,"+e.value}):(img.saveIt_=!0,img.onload=n,img.src=o[1])})}if(e)return constants.DEBUG&&util.log("break at load images due error from previous inits"),t.pass(!0);t.take();var i,l,a=model.graphics;a.units.curStep_=0,a.units.mode_="UNIT",a.properties.curStep_=0,a.properties.mode_="PROPERTY",a.tiles.curStep_=0,a.tiles.mode_="TILE",a.misc.curStep_=0,a.misc.mode_="MISC";var s=0,c=[a.units,a.properties,a.tiles,a.misc],d=jWorkflow.order(function(){return constants.DEBUG&&util.log("start loading images"),c[0]});for(i=0,l=a.units.length;l>i;i++)d.andThen(r);for(i=0,l=a.properties.length;l>i;i++)d.andThen(r);for(i=0,l=a.tiles.length;l>i;i++)d.andThen(r);for(i=0,l=a.misc.length;l>i;i++)d.andThen(r);d.andThen(function(e){e===!0?(constants.DEBUG&&util.log("failed to load images"),t.pass(!0)):(constants.DEBUG&&util.log("finished loading images"),t.pass(!1))}).start()});